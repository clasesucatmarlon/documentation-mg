"use strict";(self.webpackChunkdocumentation_mg=self.webpackChunkdocumentation_mg||[]).push([[5994],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>v});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(t),p=o,v=m["".concat(u,".").concat(p)]||m[p]||d[p]||a;return t?r.createElement(v,i(i({ref:n},l),{},{components:t})):r.createElement(v,i({ref:n},l))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={},i="Ejercicios varios",c={unversionedId:"Javascript/Ejercicios",id:"Javascript/Ejercicios",title:"Ejercicios varios",description:"Funci\xf3n que tome dos n\xfameros (a y b) como argumento. Suma a y b. Devuelve el resultado",source:"@site/docs/Javascript/Ejercicios.md",sourceDirName:"Javascript",slug:"/Javascript/Ejercicios",permalink:"/documentation-mg/docs/Javascript/Ejercicios",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Javascript/Ejercicios.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Javascript",permalink:"/documentation-mg/docs/category/javascript"}},u={},s=[{value:"Funci\xf3n que tome dos n\xfameros (a y b) como argumento. Suma a y b. Devuelve el resultado",id:"funci\xf3n-que-tome-dos-n\xfameros-a-y-b-como-argumento-suma-a-y-b-devuelve-el-resultado",level:3},{value:"Funci\xf3n que tome un n\xfamero (a) como argumento. Divide a en sus d\xedgitos individuales y los devuelve en un array. Sugerencia: es posible que desee cambiar el tipo del n\xfamero para la divisi\xf3n",id:"funci\xf3n-que-tome-un-n\xfamero-a-como-argumento-divide-a-en-sus-d\xedgitos-individuales-y-los-devuelve-en-un-array-sugerencia-es-posible-que-desee-cambiar-el-tipo-del-n\xfamero-para-la-divisi\xf3n",level:3}],l={toc:s},m="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ejercicios-varios"},"Ejercicios varios"),(0,o.kt)("h3",{id:"funci\xf3n-que-tome-dos-n\xfameros-a-y-b-como-argumento-suma-a-y-b-devuelve-el-resultado"},"Funci\xf3n que tome dos n\xfameros (a y b) como argumento. Suma a y b. Devuelve el resultado"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"```js\nfunction myFunction (a, b) {\n    return a + b;\n}\n\n// Test Cases:\nmyFunction(1,2) --\x3e     Expected 3\nmyFunction(1,10) --\x3e    Expected 11\nmyFunction(99,1) --\x3e    Expected 100\n```\n")),(0,o.kt)("h3",{id:"funci\xf3n-que-tome-un-n\xfamero-a-como-argumento-divide-a-en-sus-d\xedgitos-individuales-y-los-devuelve-en-un-array-sugerencia-es-posible-que-desee-cambiar-el-tipo-del-n\xfamero-para-la-divisi\xf3n"},"Funci\xf3n que tome un n\xfamero (a) como argumento. Divide a en sus d\xedgitos individuales y los devuelve en un array. Sugerencia: es posible que desee cambiar el tipo del n\xfamero para la divisi\xf3n"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"```js\n")),(0,o.kt)("p",null,"   function myFunction (a) {\nlet array = [];\nlet numberAsString = a.toString();\nlet digitArray = numberAsString.split('');\narray = digitArray.map( (char) => {\nreturn parseInt(char);\n});\nreturn array;\n}"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"function myFunction( a ) {\n    const string = a + '';\n    const strings = string.split('');\n    return strings.map(digit => Number(digit))\n}\n\n//Test Cases:\nmyFunction(10) --\x3e     Expected [1,0]\nmyFunction(931) --\x3e    Expected [9,3,1]\nmyFunction(193278) --\x3e    Expected [1,9,3,2,7,8]\n```\n")),(0,o.kt)("p",null,"function myFunction( a ) {\nconst string = a + '';\nconst strings = string.split('');\nreturn strings.map(digit => Number(digit))\n}"))}d.isMDXComponent=!0}}]);